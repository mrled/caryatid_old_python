import argparse
import os
import sys

import caryatid


def main(*args, **kwargs):
    parser = argparse.ArgumentParser(
        description="Add box built with packer to a vagrant catalog")
    parser.add_argument('--debug', '-d', action='store_true', help="Include debugging output")
    actions = parser.add_subparsers(dest='action')
    actions.required = True

    addparser = actions.add_parser('add', help='Add a box to a catalog')
    addparser.add_argument('name', help='The name of the vagrant box')
    addparser.add_argument('description', help='The description of the vagrant box')
    addparser.add_argument('version', help='The version of the vagrant box')
    addparser.add_argument('provider', help='The VM provider of the vagrant box')
    addparser.add_argument('artifact', help='The path to the .box artifact generated by packer')
    addparser.add_argument('--artifact-extension', '-e', dest='extension', default='box', help='The file extension of the artifact. Passing a file with any other extension will cause the script to sys.exit(0). For use with packer this must be "box". (This option is intended mostly for testing.)')

    storagebackends = addparser.add_subparsers(dest='storagebackend')
    storagebackends.required = True
    scpsubparser = storagebackends.add_parser('scp', help='Upload to remote scp server')
    scpsubparser.add_argument('destination', help='The destination directory such as user@example.com/some/path')
    copysubparser = storagebackends.add_parser('copy', help='Copy to location on filesystem')
    copysubparser.add_argument('destination', help='The destination directory such as /some/path or X:\\some\\path')

    parsed = parser.parse_args()
    if parsed.debug:
        global debug
        debug = True

    artifact = caryatid.resolvepath(parsed.artifact)
    splart = os.path.basename(artifact).split(".")
    if splart[-1] != parsed.extension:
        print("Passed an artifact named '{}' with an extension other than '{}' nothing to do".format(artifact, parsed.extension))
        return 0

    if parsed.action == 'add':
        if parsed.storagebackend == 'copy':
            caryatid.addcopy(parsed.name, parsed.description, parsed.version, parsed.provider, artifact, parsed.destination)
        elif parsed.storagebackend == 'scp':
            caryatid.scpbox(parsed.name, parsed.description, parsed.version, parsed.provider, artifact, parsed.destination)
        else:
            raise Exception("No such storage backend '{}'".format(parsed.storagebackend))
    else:
        raise Exception("No such action '{}'".format(parsed.action))


if __name__ == '__main__':
    sys.exit(main(*sys.argv))
